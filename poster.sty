\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mspposter}

\RequirePackage{microtype}

% for renewing the environment
\RequirePackage{adjmulticol}

\RequirePackage{ifthen}
\RequirePackage{tikz}

\usetikzlibrary{
  calc,
  backgrounds,
  positioning
}

\usepgfmodule{oo}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% workaround for undefined control sequence error when 
% using tikzpicture inside a node
\newdimen\currentWidth

% class for poster
\pgfooclass{poster}{

  \method poster() {
    % set width of cell in one column layout
    \pgfmathparse{ \textwidth - 2 * \pgfoovalueof{cellPadding}} 
    \pgfoolet{oneColumnWidth}{\pgfmathresult}
    % set width of cell in two column layout
    \pgfmathparse{0.5 * \textwidth - 2 * \pgfoovalueof{cellPadding} - 0.5 * \pgfoovalueof{cellSpacing}} 
    \pgfoolet{twoColumnWidth}{\pgfmathresult}
  }

  % ATTRIBUTES

  \attribute cellSpacing = 20;
  \attribute cellOpen = false;
  \attribute columnAmount = 1;
  \attribute currentColumn = 1;
  \attribute cellWidth = \textwidth;
  \attribute oneColumnWidth = \textwidth; 
  \attribute twoColumnWidth = \textwidth; 
  \attribute cellPadding = 10;

  % METHODS
  \method openCell(){
    % try to close any open cell
    \pgfoothis.closeCell()
    % set flag to true
    \pgfooset{cellOpen}{true}
    % 
    \ifthenelse{\equal{\pgfoovalueof{columnAmount}}{2}}
    {
      \currentWidth = \pgfoovalueof{twoColumnWidth} pt
      \ifthenelse{\equal{\pgfoovalueof{currentColumn}}{1}}
      {
        \node [
          below=\pgfoovalueof{cellSpacing}pt of left,
          box,
          text width=\currentWidth,
          anchor=north]
          (current)
        \bgroup 
      }
      {
        \node [
          below=\pgfoovalueof{cellSpacing}pt of right,
          box,
          text width=\currentWidth,
          anchor=north]
          (current)
        \bgroup 
      }
    }
    {
      \currentWidth = \pgfoovalueof{oneColumnWidth} pt
      \node [
        below=\pgfoovalueof{cellSpacing}pt of center,
        box,
        text width=\currentWidth,
        anchor=north]
        (current)
        \bgroup 
    }
  }

  \method closeCell(){
    % only close cell if it is open
    \ifthenelse{\equal{\pgfoovalueof{cellOpen}}{true}}
    {
      \egroup;
      % use path intersections to update coordinates
      % only update center if y value is smaller
      \path let
        \p1 = (center),
        \p2 = (current.south) 
        in \ifdim \y2 < \y1 coordinate (center) at (\x1, \y2)\fi;
      % set flag to false
      \pgfooset{cellOpen}{false}
      % update anchors and select next column
      \ifthenelse{\equal{\pgfoovalueof{columnAmount}}{2}}
      {
        % we have two columns, check which is the current one
        \ifthenelse{\equal{\pgfoovalueof{currentColumn}}{1}}
        {
          % update left anchor and move to next column
          \coordinate (left) at (current.south -| left); 
          \pgfooset{currentColumn}{2}
        }
        {
          % update right anchor and move to first column
          \pgfooset{currentColumn}{1}
          \coordinate (right) at (current.south -| right); 
        }
      }
      {
        % we only have one column, update left and right anchor
        \coordinate (left) at (current.south -| left); 
        \coordinate (right) at (current.south -| right); 
      }
    }
    {
    }
  }

  % set amount of columns
  \method setColumns(#1) {
    % try to close any open cell
    \pgfoothis.closeCell()
    % set column amount 
    \pgfooset{columnAmount}{#1}
    % return to first column after change
    \pgfooset{currentColumn}{1}
  }

  \method setupAnchors() {
    % initialize the anchors
    \coordinate (center) at (0, .54\paperheight);
    % align both anchors to create the wanted spacing between
    % two columns
    \coordinate (left) at  (-.25\textwidth - \pgfoovalueof{cellSpacing} / 4 pt, .54\paperheight);
    \coordinate (right) at ( .25\textwidth + \pgfoovalueof{cellSpacing} / 4 pt, .54\paperheight);
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% create tikzpicture
\AtBeginDocument {%

  % set width
  \textwidth0.9\paperwidth

  % create poster object
  \pgfoonew \poster=new poster()

  \parindent0pt
  \null
  \thispagestyle{empty}
  % offset a little bit
  \vskip2cm
  \vfill
  \hfil
  \begin{tikzpicture}[overlay,
    % style for boxes
    box/.style={
      fill=white, anchor=north,
      inner sep=10,
      draw,
      very thick,
      rounded corners}
  ]

  \poster.setupAnchors()

    % for background shading
  \coordinate (bgleft) at (-.5\paperwidth,0);
  \coordinate (bgright) at (0.5\paperwidth,0);
  \coordinate (bottom) at (0,-.6\paperheight);
  \coordinate (upper) at (0,.57\paperheight);

  % background 
  \begin{scope}[on background layer]
    \shade [bottom color=red!30,top color=orange!40]
    (upper -|  bgleft) rectangle (bottom -| bgright);
  \end{scope}
}

\AtEndDocument {%
  \poster.closeCell()

  \end{tikzpicture}
  \vfill
  \vbox{}
  \clearpage
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% wrapper commands to the poster class
\renewcommand\twocolumn{%
  \poster.setColumns(2)
}

\renewcommand\onecolumn{%
  \poster.setColumns(1)
}

\renewenvironment{adjmulticols}[3]{
  \poster.setColumns(#1)
}{
  \poster.setColumns(1)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\renewcommand\columnbreak{%
  \relax
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{posterBlock}{
  \poster.openCell()
}
{
  \poster.closeCell()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
